Second step in my quest to get back into programming and learn go!

A data structure for (hopefully) efficient file-editing operations like copy,
paste and insertions.

Maintain a (binary?)tree, where each node is 'backed' by some data, either a
buffer or a portion of a file (a ReadSeeker or some such go thing).  Then
editing operation such as deletions and insertions can be done efficiently by
not changing the file or buffer, but rather by changing the tree-overlay.

I've chosen to use a splay tree because for editing you could splay the node
we're editing to the root.  This makes things such as copying, inserting and
deleting a bit easier because you're working on the root node.
Also splay trees are neat.
